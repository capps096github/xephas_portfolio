<!-- Contact Form Component using Tailwind CSS and Astro -->
<form id="contact-form" class="max-w-md mx-auto p-6 bg-slate-900 rounded-lg shadow-lg border border-indigo-700">
    <h2 class="text-2xl font-bold text-white mb-6">Get In Touch</h2>
    
    <div class="mb-4">
      <label for="name" class="block text-white mb-2">Name</label>
      <input type="text" id="name" name="name" class="w-full px-4 py-2 bg-slate-800 text-white rounded-md border border-slate-700 focus:border-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
    </div>
    
    <div class="mb-4">
      <label for="email" class="block text-white mb-2">Email</label>
      <input type="email" id="email" name="email" class="w-full px-4 py-2 bg-slate-800 text-white rounded-md border border-slate-700 focus:border-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
    </div>
    
    <div class="mb-4">
      <label for="subject" class="block text-white mb-2">Subject</label>
      <input type="text" id="subject" name="subject" class="w-full px-4 py-2 bg-slate-800 text-white rounded-md border border-slate-700 focus:border-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
    </div>
    
    <div class="mb-6">
      <label for="message" class="block text-white mb-2">Message</label>
      <textarea id="message" name="message" rows="4" class="w-full px-4 py-2 bg-slate-800 text-white rounded-md border border-slate-700 focus:border-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-500" required></textarea>
    </div>
    
    <div class="flex items-center justify-between">
      <button type="submit" class="px-6 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-300">
        Send Message
      </button>
      <div class="text-sm text-gray-400">or</div>
      <a href="#schedule" class="px-4 py-2 bg-orange-600 text-white rounded-md hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-orange-500 transition duration-300">
        Schedule a Call
      </a>
    </div>
  </form>
  
  <!-- JavaScript for form submission using Web3Forms -->
  <script>
    document.getElementById('contact-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const form = e.target as HTMLFormElement;
      const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
      const originalButtonText = submitButton.innerHTML;
      
      // Add feedback elements
      let feedbackEl = document.getElementById('form-feedback');
      if (!feedbackEl) {
        feedbackEl = document.createElement('div');
        feedbackEl.id = 'form-feedback';
        feedbackEl.className = 'mt-4 py-2 px-4 rounded-md';
        form.appendChild(feedbackEl);
      }
      
      // Show loading state
      submitButton.disabled = true;
      submitButton.innerHTML = 'Sending...';
      
      const formData = new FormData(form);
      formData.append('access_key', 'YOUR_WEB3FORMS_ACCESS_KEY'); // Replace with your Web3Forms access key
      
      try {
        feedbackEl.className = 'mt-4 py-2 px-4 rounded-md bg-yellow-500/20 text-yellow-200';
        feedbackEl.textContent = 'Sending your message...';
        
        const response = await fetch('https://api.web3forms.com/submit', {
          method: 'POST',
          body: formData,
        });
        
        const data = await response.json();
        
        if (data.success) {
          // Show success message
          form.reset();
          feedbackEl.className = 'mt-4 py-2 px-4 rounded-md bg-green-500/20 text-green-200';
          feedbackEl.textContent = 'Thanks for contacting me! I will get back to you soon.';
        } else {
          // Show error message
          feedbackEl.className = 'mt-4 py-2 px-4 rounded-md bg-red-500/20 text-red-200';
          feedbackEl.textContent = `Error: ${data.message || 'Your message could not be sent. Please try again.'}`;
        }
      } catch (error) {
        console.error('Error:', error);
        feedbackEl.className = 'mt-4 py-2 px-4 rounded-md bg-red-500/20 text-red-200';
        feedbackEl.textContent = 'Network error. Please check your connection and try again.';
      } finally {
        // Restore button state
        submitButton.disabled = false;
        submitButton.innerHTML = originalButtonText;
      }
    });
  </script>